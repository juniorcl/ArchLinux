#!/usr/bin/bash
#############################################################################################################################
############################################################################################################################# 
###                                                                                                                       ###
###                                                     Dzen2 Bar                                                         ### 
###                                                                                                                       ###
#############################################################################################################################
############################################################################################################################# 

## Dzen Config
##############
##############
ICON_PATH="$HOME/.dzen2/icon"
DZEN_BG="#770000"
DZEN_FG="#BEBEBE"
DZEN_FONT="-*-terminus-medium-r-*-*-10-*-*-*-*-*-iso10646-*"
SLEEP=2
X=430
Y=0
WIDTH=2000
HEIGHT=20
 
SEPARATOR="^bg(#000000)^fg($DZEN_BG)^i($ICON_PATH/r_arr.xbm)^fg()^bg()^bg($DZEN_BG) "
SEPARATOR2="^bg($DZEN_BG)^fg(#000000)^i($ICON_PATH/r_arr.xbm)^fg()^bg()^bg(#000000) "

DZEN="dzen2 -ta r -fn $DZEN_FONT -x $X -y $Y -w $WIDTH -h $HEIGHT"

## Dzen2 Info
#############
#############
function Kernel()
{
    kernel=$(uname -r | grep -Eo '([0-9]*)\.([0-9]*)\.([0-9]*)\-([0-9]*)')
    echo -n "$SEPARATOR ^i($ICON_PATH/arch.xbm)^fg($DZEN_FG) $kernel  ^fg()^bg()"
    return
}

function Root()
{
    root_free=$(df -h / | sed '1d' | awk '{print $4}')
    #root_free_porcent=$(df -h /home | sed '1d' | awk '{print $5}')
    echo -n "$SEPARATOR2 ^i($ICON_PATH/root.xbm)^fg($DZEN_FG) $root_free  ^fg()^bg()" 
    return
}

function Home()
{
    home_free=$(df -h /home | sed '1d' | awk '{print $4}')
    #home_free_porcent=$(df -h /home | sed '1d' | awk '{print $5}')
    echo -n "$SEPARATOR ^i($ICON_PATH/hd.xbm)^fg($DZEN_FG) $home_free  ^fg()^bg()" 
    return
}

function Ram()
{
    ram=$(free -mh | awk '{print $3}' | sed '1d' | sed '2d')
    ram_porcent=$(free | grep Mem | awk '{print $3/$2 * 100}' | grep -Eo '([0-9]*)\.([0-9].)')
    echo -n "$SEPARATOR2 ^i($ICON_PATH/ram.xbm)^fg($DZEN_FG) $ram $ram_porcent%  ^fg()^bg()"
    return
}

function Swap()
{
    swap=$(free -mh | awk '{print $3}' | sed '1d' | sed '1d')
    swap_porcent=$(free | grep Swap | awk '{print $3/$2 * 100}' | grep -Eo '([0-9]*)')
    echo -n "$SEPARATOR ^i($ICON_PATH/swap.xbm) $swap $swap_porcent%  ^fg()^bg()"
    return
}

function Battery
{
    battery=$(acpi -b | grep -Po "\d{1,}%")
    charging=$(acpi -b | grep -Eo "(arging|Full)")

    if test $charging == "Full"
    then 
        echo -n "$SEPARATOR2 ^i($ICON_PATH/battery.xbm) $battery  ^fg()^bg()"
    else
        echo -n "$SEPARATOR2 ^i($ICON_PATH/charging.xbm) $battery  ^fg()^bg()"
    fi
}

function Brightness()
{
    brightness=$(xbacklight -get | grep -Eo '([0-9]*)\.([0-9].)')
    echo -n "$SEPARATOR ^i($ICON_PATH/brightness.xbm) $brightness%  ^fg()^bg()"
    return
}     

function Wifi()
{
    wifi_name=$(nmcli dev | awk '{print $4}' | sed '3,4d' | sed '1d')
    if test -n $wifi_name
    then
        echo -n "$SEPARATOR2 ^i($ICON_PATH/wifi.xbm) $wifi_name  ^fg()^bg()"
    else
        echo -n "$SEPARATOR2 Not Connected  ^fg()^bg()"
    fi
    return
}

function Date()
{
    date="$(date +"%d").$(date +"%b")"
    echo -n "$SEPARATOR ^i($ICON_PATH/calendar.xbm) $date  ^fg()^bg()"
    return
}

function Time()
{
    hour=$(date +"%H:%M")
    echo -n "$SEPARATOR2 ^i($ICON_PATH/clock.xbm) $hour  ^fg()^bg()"
    return
}

## Print Dzen2
##############
##############
Print()
{
    Kernel
    Root
    Home
    Ram
    Swap
    Battery
    Brightness
    Wifi
    Date
    Time
    return
}

while true
do
    echo "$(Print)" 
    sleep $SLEEP
done | $DZEN
