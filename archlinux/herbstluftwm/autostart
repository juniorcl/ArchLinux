#!/usr/bin/env bash

## cØnƒig Øƒ hΞЯbŞtĿuƒtwm

hc() 
{
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'

## Remove all existing keybindings
##################################
##################################
hc keyunbind --all

## keybindings
##############
##############
## if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn termite #${TERMINAL:-xterm} # use your $TERMINAL with xterm as fallback

## Basic movement
## Focusing clients
###################
###################
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

## Moving clients
#################
#################
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right
			
## Splitting frames
## Create an empty frame at the specified direction
###################################################
###################################################
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
## let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

## Resizing frames
##################
##################
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

## Tags
#######
#######
#tag_names=( {1..9} 0 )
tag_names=( "h" "3" "r" "b" "s" "7" "l" "u" "f" "t" ) 
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]}
do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    
    if ! test -z "$key" 
    then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

## Cycle through tags
#####################
#####################
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

## Layouting
############
############
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
## The following cycles through the available layouts within a frame, but skips
## layouts, if the layout change wouldn't affect the actual window positions.
## I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

## Mouse
########
########
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

## Focus
########
########
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

## Theme
########
########
BLACK='#000000'
BLACK2='#101010'
GRAY='#454545'                     
GRAY2='#222222'
RED='#700000'
PINK='#FF00FF'
BLUE='#0066CC'
YELLOW='#d6d600'

hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color $YELLOW    #the border color of a focused frame
hc set frame_border_normal_color $GRAY2     #the border color of an unfocused frame
hc set frame_bg_normal_color $GRAY          #the fill color of an unfocused frame (it is only visible if always_show_frame is set)
hc set frame_bg_active_color $BLACK         #the fill color of a focused frame
hc set frame_border_width 1  			    #border of both windows
hc set always_show_frame 1                  #if set, all frames are displayed. If unset, only frames with focus or with windows in it are displayed.    

#If set, the background of frames are transparent. That means a rectangle is cut out 
#frome the inner such that only the frame border and a stripe of width 
#frame_transparent_width can be seen. Use frame_active_opacity and 
#frame_normal_opacity for real transparency.                 
hc set frame_bg_transparent 1

#specifies the width of the remaining frame colored with frame_bg_active color
#if frame_bg_transparent is set.
hc set frame_transparent_width 0 		   

hc set frame_gap 2                          #The gap between frames in the tiling mode. 

hc attr theme.active.color $YELLOW
hc attr theme.normal.color $GRAY2
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black             
hc attr theme.border_width 0 			    #border betwen active windows
hc attr theme.floating.border_width 1
hc attr theme.floating.outer_width 0
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color $BLACK
hc attr theme.active.outer_color $BLACK
hc attr theme.background_color $RED

hc set window_gap 0                         #The gap between windows within one frame in the tiling mode. 
hc set frame_padding 0                      #The padding within a frame in the tiling mode. the space between the border of a frame and the windows within it. 

#If set, window borders and gaps will be removed and minimal when there’s 
#no ambiguity regarding the focused window. 
#This minimal window decoration can be configured by the theme.minimal object. 
hc set smart_window_surroundings 0

#If set, frame borders and gaps will be removed when there’s no ambiguity regarding the focused frame. 
hc set smart_frame_surroundings 1

#Specifies the gap around a monitor. 
#If the monitor is selected and the mouse position would be restored into this gap, it is set to the center of the monitor. 
#This is useful, when the monitor was left via mouse movement, but is reselected by keyboard. If the gap is 0 (default), the mouse is never recentered. 
hc set mouse_recenter_gap 0

## Rules
########
########
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

## Unlock, just to be sure
##########################
##########################
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

## Multi Monitor
################
################
# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

## To use TV as monitor
#######################
#######################
if test $(xrandr | grep HDMI2 | awk '{print $2}') == "connected"
then
    #my tv is on the notebook right
    hc set_monitors 1366x768+0+0 1920x1080+1366+0 
    hc rule monitor=1 tag="t" 

    hc keybind $Mod+Ctrl+t spawn xrandr --output HDMI2 --auto --right-of eDP1
    hc keybind $Mod+Ctrl+y spawn xrandr --output HDMI2 --auto --off
fi

## Navigate between monitors
############################
############################
hc keybind $Mod-Shift-h or / shift left / \
    chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-j or / shift down / \
    chain , lock , shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Shift-k or / shift up / \
    chain , lock , shift_to_monitor -u , focus_monitor -u , unlock
hc keybind $Mod-Shift-l or / shift right / \
    chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
    
## Find the panel
#################
#################
#panel=~/.config/herbstluftwm/panel.sh
panel=~/.config/dzen2/herbstluftbar
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh

"$panel" 0 & #the panel will stay in monitor 0
#for monitor in $(herbstclient list_monitors | cut -d: -f1)
#do
    # start it on each monitor
    #"$panel" $monitor &
#done

## Screenshot: Print Screen ou Screenshooter
############################################
############################################
hc keybind Print spawn scrot -q 70 '%d.%m.%Y_%H.%M_screenshot.png' -e 'mv $f ~/Pictures/'
 
## Wallpaper
#################################
#################################
hc spawn feh --bg-scale $HOME/Pictures/Wallpapers/wallhaven-563471.jpg

## keyboard as abnt2
####################
####################
hc spawn setxkbmap -model abnt2 -layout br -variant abnt2

## Screen brightness controls
#############################
#############################
hc keybind XF86MonBrightnessUp spawn xbacklight -inc 10
hc keybind XF86MonBrightnessDown spawn xbacklight -dec 10

## Atomatically move program to tag
###################################
###################################
hc rule class=Firefox tag=${tag_names[2]}
hc rule class=Pcmanfm tag=${tag_names[3]}
hc rule title=Telegram tag=${tag_names[1]}
hc rule class=Vlc tag=${tag_names[5]}
hc rule class=qBittorrent tag=${tag_names[7]}
hc rule title=LibreOffice tag=${tag_names[6]}

## Exec Program
###############
###############
hc keybind $Mod-Alt-f spawn firefox
hc keybind $Mod-Alt-t spawn $HOME/.Telegram/Telegram
hc keybind $Mod-d spawn rofi -show run -separator-style dash -config /home/junior/.config/rofi/rofi.conf
hc keybind $Mod-Alt-a spawn termite -e alsamixer
hc keybind $Mod-Alt-r spawn termite -e ranger
hc keybind $Mod-Alt-c spawn chromium &
hc keybind $Mod-Alt-p spawn pcmanfm &
hc keybind $Mod-Alt-u spawn pavucontrol
hc keybind $Mod-Alt-v spawn vlc &
hc keybind $Mod-Alt+l spawn /usr/bin/libreoffice
hc keybind $Mod-Alt-i spawn virtualbox
